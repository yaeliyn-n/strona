# Zmienne dla Discord OAuth2
DISCORD_CLIENT_ID=1375562999984689173
DISCORD_CLIENT_SECRET=GuzAJaOhs4FRbl6IWrOd2J86o-XaHG8o
# ZAKTUALIZOWANO: Użyj publicznego IP i portu strony WWW (domyślnie 5500)
DISCORD_REDIRECT_URI=http://83.9.209.218:5500/auth/discord/callback

# Sekret sesji dla Express
SESSION_SECRET=gdgfh54645yhgfg43gerh65hfythf6t # Zalecana zmiana na nowy, unikalny i silny sekret

# Konfiguracja serwera strony WWW
PORT=5500 # Port, na którym działa Twoja strona WWW (Node.js)
# NOWE/ZAKTUALIZOWANE: Publiczny adres URL Twojej strony WWW
WEBSITE_URL=http://83.9.209.218:5500

# Konfiguracja Email (zastąp rzeczywistymi danymi, jeśli używasz)
EMAIL_HOST=smtp.example.com
EMAIL_PORT=587
EMAIL_USER=twojemail@example.com
EMAIL_PASS=twojehaslodoemaila
# EMAIL_TO_SUPPORT=adres_email_dla_wsparcia@twojadomena.com # Uzupełnij, jeśli system zgłoszeń ma wysyłać na konkretny adres

# Webhook Discord dla powiadomień (zastąp rzeczywistym URL, jeśli używasz)
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/xxx/yyy
# Jeśli używasz osobnego webhooka dla zgłoszeń wsparcia (zgodnie z server.js):
# DISCORD_WEBHOOK_URL_SUPPORT=https://discord.com/api/webhooks/TwojSupportWebhookID/TwojSupportWebhookToken

# Klucz API do komunikacji Z API BOTA (musi być taki sam jak w konfiguracji API bota - API_KEY_ENV w bot.py)
BOT_API_KEY=TestowyKlucz123ABC # Upewnij się, że to silny, unikalny klucz i taki sam jak w konfiguracji bota

# Adres URL API Bota
# ZAKTUALIZOWANO: Użyj publicznego IP i portu API bota (domyślnie 8080)
BOT_API_URL=http://83.9.209.218:8080 # Zakładając, że API bota działa na tym samym IP i porcie 8080

# ID Discord administratora strony (dla dostępu do panelu /admin w server.js)
# ZASTĄP TWOIM RZECZYWISTYM ID DISCORD
ADMIN_DISCORD_ID=1238814802357387285 # Upewnij się, że to Twoje ID